{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunyo\\\\fork_repository\\\\ChatBot\\\\chatbot\\\\src\\\\UnderBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AiOutlineArrowUp } from 'react-icons/ai';\nimport './UnderBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UnderBar() {\n  _s();\n\n  // 채팅 로그가 투두 리스르 생성 기능과 비슷하다고 느껴서\n  // \"리액트를 다루는 기술\" 책에 있는 투두 리스트에서 코드를 가져왔다.\n  const [toDo, setToDo] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n\n  const onChange = event => setToDo(event.target.value);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (toDo === \"\") {\n      return;\n    }\n\n    setToDos(currentArray => [toDo, ...currentArray]);\n    setToDo(\"\");\n  };\n\n  console.log(toDos);\n  console.log(toDos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 44\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: toDos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"underBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat\",\n          type: \"text\",\n          value: toDo,\n          placeholder: \"\\uCC44\\uD305\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineArrowUp, {\n        className: \"btnEnter\",\n        onClick: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UnderBar, \"faKS3Ui8W1cTkHvLHwWsfZMXMFk=\");\n\n_c = UnderBar;\nexport default UnderBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnderBar\");","map":{"version":3,"sources":["C:/Users/eunyo/fork_repository/ChatBot/chatbot/src/UnderBar.js"],"names":["React","useState","AiOutlineArrowUp","UnderBar","toDo","setToDo","toDos","setToDos","onChange","event","target","value","onSubmit","preventDefault","currentArray","console","log","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,gBAAR,QAA+B,gBAA/B;AACA,OAAO,gBAAP;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,QAAQ,GAAIC,KAAD,IAAWJ,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnC;;AACA,QAAMC,QAAQ,GAAIH,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIT,IAAI,KAAK,EAAb,EAAiB;AACb;AACH;;AACDG,IAAAA,QAAQ,CAAEO,YAAD,IAAkB,CAACV,IAAD,EAAO,GAAGU,YAAV,CAAnB,CAAR;AACAT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAPD;;AAQAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,cAAiBD;AAAjB,KAASC,KAAT;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAZ;AACA,sBACI;AAAA,4BACI;AAAA,gBACKb,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEP,QAAhB;AAAA,+BACI;AACI,UAAA,SAAS,EAAC,MADd;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,KAAK,EAAER,IAHX;AAII,UAAA,WAAW,EAAC,mDAJhB;AAKI,UAAA,QAAQ,EAAEI;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,UAA5B;AAAuC,QAAA,OAAO,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAsBH;;GAtCQT,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {AiOutlineArrowUp} from 'react-icons/ai';\r\nimport './UnderBar.css';\r\n\r\nfunction UnderBar() {\r\n    // 채팅 로그가 투두 리스르 생성 기능과 비슷하다고 느껴서\r\n    // \"리액트를 다루는 기술\" 책에 있는 투두 리스트에서 코드를 가져왔다.\r\n    const [toDo, setToDo] = useState(\"\");\r\n    const [toDos, setToDos] = useState([]);\r\n    const onChange = (event) => setToDo(event.target.value);\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (toDo === \"\") {\r\n            return;\r\n        }\r\n        setToDos((currentArray) => [toDo, ...currentArray]);\r\n        setToDo(\"\");\r\n    }\r\n    console.log(toDos);\r\n    console.log(toDos.map((item, index) => <li key={index}>{item}</li>));\r\n    return (\r\n        <>\r\n            <ul>\r\n                {toDos.map((item, index) => (\r\n                    <li key={index}>{item}</li>\r\n                ))}\r\n            </ul>\r\n            <div className=\"underBar\">\r\n                <form onSubmit={onSubmit}>\r\n                    <input\r\n                        className=\"chat\"\r\n                        type=\"text\"\r\n                        value={toDo}\r\n                        placeholder=\"채팅을 입력하세요\"\r\n                        onChange={onChange}\r\n                    />\r\n                </form>\r\n                <AiOutlineArrowUp className=\"btnEnter\" onClick={onSubmit} />\r\n                <hr />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default UnderBar;"]},"metadata":{},"sourceType":"module"}